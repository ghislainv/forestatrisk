## Build wheel and upload to TestPyPI (!! not PyPI !!)
## https://github.com/joerick/cibuildwheel/blob/master/examples/github-deploy.yml
## https://scikit-hep.org/developer/gha_wheels

name: Build wheel and upload to TestPyPI

# When push on branch dev
on:
  push:
    branches:
      - dev
    tags:
      - "v*"

env:
  CONFIGURATIONS_FOLDER: .github/label-configuration-files
  CONFIGURATIONS_ARTIFACT: label-configuration-files
  
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.11'
      - name: Install NumPy and cibuildwheel
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install cibuildwheel==2.16.2
      - name: Build wheels
        run: |
          python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp311-*
          CIBW_SKIP: pp*
          CIBW_BEFORE_BUILD: pip install numpy
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.11'
      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install numpy
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    # if: startsWith(github.event.ref, 'refs/tags/v')
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.testpypi_password }}
          repository_url: https://test.pypi.org/legacy/

# End
